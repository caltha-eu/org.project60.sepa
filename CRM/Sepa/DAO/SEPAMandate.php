<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from org.project60.sepa/xml/schema/CRM/Sepa/Mandate.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:ea12962abe4425085f1cda4a10f059ea)
 */
use CRM_Sepa_ExtensionUtil as E;

/**
 * Database access object for the SEPAMandate entity.
 */
class CRM_Sepa_DAO_SEPAMandate extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_sdd_mandate';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * A unique mandate reference
   *
   * @var string
   *   (SQL type: varchar(35))
   *   Note that values will be retrieved from the database as a string.
   */
  public $reference;

  /**
   * Information about the source of registration of the mandate
   *
   * @var string|null
   *   (SQL type: varchar(64))
   *   Note that values will be retrieved from the database as a string.
   */
  public $source;

  /**
   * Physical tablename for the contract entity being joined, eg contributionRecur or Membership
   *
   * @var string|null
   *   (SQL type: varchar(64))
   *   Note that values will be retrieved from the database as a string.
   */
  public $entity_table;

  /**
   * FK to contract entity table specified in entity_table column.
   *
   * @var int|string
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $entity_id;

  /**
   * by default now()
   *
   * @var string
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $date;

  /**
   * FK to ssd_creditor
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $creditor_id;

  /**
   * FK to Contact ID of the debtor
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * Name of the account holder
   *
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $account_holder;

  /**
   * Iban of the debtor
   *
   * @var string
   *   (SQL type: varchar(42))
   *   Note that values will be retrieved from the database as a string.
   */
  public $iban;

  /**
   * BIC of the debtor
   *
   * @var string|null
   *   (SQL type: varchar(11))
   *   Note that values will be retrieved from the database as a string.
   */
  public $bic;

  /**
   * RCUR for recurrent (default), OOFF for one-shot
   *
   * @var string
   *   (SQL type: varchar(4))
   *   Note that values will be retrieved from the database as a string.
   */
  public $type;

  /**
   * Status of the mandate (INIT, OOFF, FRST, RCUR, SENT, INVALID, COMPLETE, ONHOLD)
   *
   * @var string
   *   (SQL type: varchar(8))
   *   Note that values will be retrieved from the database as a string.
   */
  public $status;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $creation_date;

  /**
   * FK to civicrm_contribution
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $first_contribution_id;

  /**
   * @var string|null
   *   (SQL type: datetime)
   *   Note that values will be retrieved from the database as a string.
   */
  public $validation_date;

  /**
   * @var int unsigned
   */
  public $bank_status;

  /**
   * @var datetime
   */
  public $bank_status_date;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_sdd_mandate';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('SEPAMandates') : E::ts('SEPAMandate');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'creditor_id', 'civicrm_sdd_creditor', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'contact_id', 'civicrm_contact', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'first_contribution_id', 'civicrm_contribution', 'id');
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Dynamic(self::getTableName(), 'entity_id', NULL, 'id', 'entity_table');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('ID'),
          'description' => E::ts('ID'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.id',
          'export' => TRUE,
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => '4.3',
        ],
        'reference' => [
          'name' => 'reference',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Reference'),
          'description' => E::ts('A unique mandate reference'),
          'required' => TRUE,
          'maxlength' => 35,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.reference',
          'export' => TRUE,
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '4.3',
        ],
        'source' => [
          'name' => 'source',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Source'),
          'description' => E::ts('Information about the source of registration of the mandate'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.source',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '4.3',
        ],
        'entity_table' => [
          'name' => 'entity_table',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Entity Table'),
          'description' => E::ts('Physical tablename for the contract entity being joined, eg contributionRecur or Membership'),
          'maxlength' => 64,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.entity_table',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => '3.2',
        ],
        'entity_id' => [
          'name' => 'entity_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Entity ID'),
          'description' => E::ts('FK to contract entity table specified in entity_table column.'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.entity_id',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => '4.3',
        ],
        'date' => [
          'name' => 'date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Mandate signature date'),
          'description' => E::ts('by default now()'),
          'required' => TRUE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.date',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'formatType' => 'activityDateTime',
          ],
          'add' => '4.3',
        ],
        'creditor_id' => [
          'name' => 'creditor_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Creditor ID'),
          'description' => E::ts('FK to ssd_creditor'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.creditor_id',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'FKClassName' => 'CRM_Sepa_DAO_SEPACreditor',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Creator"),
          ],
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact ID'),
          'description' => E::ts('FK to Contact ID of the debtor'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.contact_id',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contact_DAO_Contact',
          'html' => [
            'type' => 'EntityRef',
            'label' => E::ts("Contact"),
          ],
          'add' => NULL,
        ],
        'account_holder' => [
          'name' => 'account_holder',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Account Holder'),
          'description' => E::ts('Name of the account holder'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.account_holder',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '4.3',
        ],
        'iban' => [
          'name' => 'iban',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Iban'),
          'description' => E::ts('Iban of the debtor'),
          'required' => FALSE,
          'maxlength' => 42,
          'size' => CRM_Utils_Type::BIG,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.iban',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '4.3',
        ],
        'bic' => [
          'name' => 'bic',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Bic'),
          'description' => E::ts('BIC of the debtor'),
          'maxlength' => 11,
          'size' => CRM_Utils_Type::TWELVE,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.bic',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => '4.3',
        ],
        'type' => [
          'name' => 'type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Type'),
          'description' => E::ts('RCUR for recurrent (default), OOFF for one-shot'),
          'required' => TRUE,
          'maxlength' => 4,
          'size' => CRM_Utils_Type::FOUR,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.type',
          'default' => 'RCUR',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'status' => [
          'name' => 'status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Status'),
          'description' => E::ts('Status of the mandate (INIT, OOFF, FRST, RCUR, SENT, INVALID, COMPLETE, ONHOLD)'),
          'required' => TRUE,
          'maxlength' => 8,
          'size' => CRM_Utils_Type::EIGHT,
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.status',
          'default' => 'INIT',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => '4.3',
        ],
        'creation_date' => [
          'name' => 'creation_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('creation date'),
          'usage' => [
            'import' => FALSE,
            'export' => TRUE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.creation_date',
          'export' => TRUE,
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'html' => [
            'type' => 'Select Date',
            'label' => E::ts("Created Date"),
          ],
          'add' => '4.3',
        ],
        'first_contribution_id' => [
          'name' => 'first_contribution_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('First Contribution (to be deprecated)'),
          'description' => E::ts('FK to civicrm_contribution'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.first_contribution_id',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'FKClassName' => 'CRM_Contribute_DAO_Contribution',
          'add' => NULL,
        ],
        'validation_date' => [
          'name' => 'validation_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('validation date'),
          'usage' => [
            'import' => FALSE,
            'export' => FALSE,
            'duplicate_matching' => FALSE,
            'token' => FALSE,
          ],
          'where' => 'civicrm_sdd_mandate.validation_date',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => '4.3',
        ],
        'bank_status' => [
          'name' => 'bank_status',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Bank status') ,
          'export' => TRUE,
          'where' => 'civicrm_sdd_mandate.bank_status',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'bank_status_date' => [
          'name' => 'bank_status_date',
          'type' => CRM_Utils_Type::T_DATE + CRM_Utils_Type::T_TIME,
          'title' => E::ts('Date of change of bank status'),
          'export' => TRUE,
          'where' => 'civicrm_sdd_mandate.bank_status_date',
          'table_name' => 'civicrm_sdd_mandate',
          'entity' => 'SEPAMandate',
          'bao' => 'CRM_Sepa_DAO_SEPAMandate',
          'localizable' => 0,
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'sdd_mandate', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'sdd_mandate', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'reference' => [
        'name' => 'reference',
        'field' => [
          0 => 'reference',
        ],
        'localizable' => FALSE,
        'unique' => TRUE,
        'sig' => 'civicrm_sdd_mandate::1::reference',
      ],
      'index_entity' => [
        'name' => 'index_entity',
        'field' => [
          0 => 'entity_table',
          1 => 'entity_id',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_sdd_mandate::0::entity_table::entity_id',
      ],
      'iban' => [
        'name' => 'iban',
        'field' => [
          0 => 'iban',
        ],
        'localizable' => FALSE,
        'sig' => 'civicrm_sdd_mandate::0::iban',
      ],
    ];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
